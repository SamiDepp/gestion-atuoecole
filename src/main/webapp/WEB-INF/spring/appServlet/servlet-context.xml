<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	
	
	
	



<annotation-driven>
    <message-converters register-defaults="true">
        <beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
            <beans:property name="objectMapper" ref="jacksonObjectMapper">
  
            </beans:property>
        </beans:bean>
    </message-converters>
   </annotation-driven>

     <beans:bean  id="jacksonObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"> 
                      <beans:property name="serializationInclusion"> 
                           <beans:value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</beans:value>
                       </beans:property>
                    
    </beans:bean> 
  
 
 
 
  <beans:bean
      class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
      <beans:property name="targetObject" ref="jacksonObjectMapper" />
      <beans:property name="targetMethod" value="configure" />
      <beans:property name="arguments">
          <beans:list>
              <beans:value type="com.fasterxml.jackson.databind.DeserializationFeature">ACCEPT_SINGLE_VALUE_AS_ARRAY</beans:value>
              <beans:value>true</beans:value>
          </beans:list>
      </beans:property>
  </beans:bean>



<!-- calendar beans -->




	
	<beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<beans:property name="entityManagerFactory" ref="entityManagerFactory" />
	</beans:bean>

	<context:component-scan base-package="com.autoecole.myapp" />
	<jpa:repositories base-package="com.autoecole.myapp.dao" />

		<beans:bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="packagesToScan" value="com.autoecole.myapp.entities" />
		<beans:property name="persistenceProviderClass" value="org.hibernate.ejb.HibernatePersistence" />
		<beans:property name="loadTimeWeaver">
			<beans:bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</beans:property>
		<beans:property name="jpaProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
				<beans:prop key="hibernate.max_fetch_depth">3</beans:prop>
				<beans:prop key="hibernate.jdbc.fetch_size">50</beans:prop>
				<beans:prop key="hibernate.jdbc.batch_size">10</beans:prop>
				<beans:prop key="hibernate.show_sql">false</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
</beans:beans>